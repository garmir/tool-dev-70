name: Ubuntu Parallel Research - No Nix Dependencies
on:
  workflow_dispatch:
    inputs:
      research_task:
        description: 'Research task'
        required: true
        default: 'network-topology-analysis'

jobs:
  # Use Ubuntu packages instead of nix (working approach)
  ubuntu-parallel-research:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v4

      - name: Install Ubuntu Tools
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl nmap netcat-openbsd jq

      - name: Execute Unique Research Node ${{ matrix.node }}
        run: |
          echo "=== Ubuntu Research Node ${{ matrix.node }} ===" > ubuntu-node-${{ matrix.node }}.txt
          echo "Task: ${{ github.event.inputs.research_task }}" >> ubuntu-node-${{ matrix.node }}.txt
          echo "Unique instruction set execution" >> ubuntu-node-${{ matrix.node }}.txt
          echo "" >> ubuntu-node-${{ matrix.node }}.txt

          case "${{ matrix.node }}" in
            "1")
              echo "UNIQUE NODE 1: External network analysis" >> ubuntu-node-${{ matrix.node }}.txt
              curl -s ifconfig.me >> ubuntu-node-${{ matrix.node }}.txt
              echo "External IP discovered" >> ubuntu-node-${{ matrix.node }}.txt
              ;;
            "2")
              echo "UNIQUE NODE 2: Service availability research" >> ubuntu-node-${{ matrix.node }}.txt
              curl -s httpbin.org/ip | jq . >> ubuntu-node-${{ matrix.node }}.txt
              echo "Service research completed" >> ubuntu-node-${{ matrix.node }}.txt
              ;;
            "3")
              echo "UNIQUE NODE 3: Tool availability verification" >> ubuntu-node-${{ matrix.node }}.txt
              nmap --version | head -1 >> ubuntu-node-${{ matrix.node }}.txt
              curl --version | head -1 >> ubuntu-node-${{ matrix.node }}.txt
              echo "Tool verification completed" >> ubuntu-node-${{ matrix.node }}.txt
              ;;
            "4")
              echo "UNIQUE NODE 4: Network connectivity testing" >> ubuntu-node-${{ matrix.node }}.txt
              curl -s -I httpbin.org/get | head -3 >> ubuntu-node-${{ matrix.node }}.txt
              echo "Connectivity testing completed" >> ubuntu-node-${{ matrix.node }}.txt
              ;;
            "5")
              echo "UNIQUE NODE 5: System information gathering" >> ubuntu-node-${{ matrix.node }}.txt
              uname -a >> ubuntu-node-${{ matrix.node }}.txt
              date >> ubuntu-node-${{ matrix.node }}.txt
              echo "System info gathering completed" >> ubuntu-node-${{ matrix.node }}.txt
              ;;
          esac

          echo "✅ Ubuntu Node ${{ matrix.node }}: SUCCESS" >> ubuntu-node-${{ matrix.node }}.txt

      - name: Upload Ubuntu Results
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-research-node-${{ matrix.node }}
          path: |
            ubuntu-node-${{ matrix.node }}.txt

  # Success Validation
  ubuntu-validation:
    needs: ubuntu-parallel-research
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download All Ubuntu Results
        uses: actions/download-artifact@v4
        with:
          path: ubuntu-results/

      - name: Validate Ubuntu Approach
        run: |
          echo "=== Ubuntu Parallel Research Validation ===" > ubuntu-validation.txt
          echo "Task: ${{ github.event.inputs.research_task }}" >> ubuntu-validation.txt
          echo "" >> ubuntu-validation.txt

          # Count successful nodes
          SUCCESS_COUNT=$(find ubuntu-results/ -name "ubuntu-node-*.txt" | wc -l)
          echo "Successful nodes: $SUCCESS_COUNT/5" >> ubuntu-validation.txt

          # Check for success indicators
          if grep -r "✅.*SUCCESS" ubuntu-results/ > /dev/null; then
            echo "✅ UBUNTU APPROACH: WORKING" >> ubuntu-validation.txt
            echo "All nodes executed unique instruction sets successfully" >> ubuntu-validation.txt
          else
            echo "❌ UBUNTU APPROACH: FAILED" >> ubuntu-validation.txt
          fi

          # Extract external IPs
          echo "" >> ubuntu-validation.txt
          echo "=== Data Collected ===" >> ubuntu-validation.txt
          grep -r -E "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}" ubuntu-results/ | head -5 >> ubuntu-validation.txt

      - name: Upload Ubuntu Validation
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-validation-results
          path: |
            ubuntu-validation.txt